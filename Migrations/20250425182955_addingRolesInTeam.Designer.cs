// <auto-generated />
using System;
using CPMP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPMP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250425182955_addingRolesInTeam")]
    partial class addingRolesInTeam
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CPMP.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("FileId")
                        .HasName("PK__Files__6F0F98BF95C3D5F9");

                    b.HasIndex("TaskId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("CPMP.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12A3C69125");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("CPMP.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Active");

                    b.HasKey("ProjectId")
                        .HasName("PK__Projects__761ABEF04DF479CE");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CPMP.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1AD5745D78");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F6409CB173")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CPMP.Models.RolesInTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RolesInTeams");
                });

            modelBuilder.Entity("CPMP.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId")
                        .HasName("PK__Tasks__7C6949B1D9F80E9C");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ProjectId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("CPMP.Models.TaskAssignment", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TaskId", "UserId")
                        .HasName("PK__TaskAssi__AD11C575C2011989");

                    b.HasIndex("UserId");

                    b.ToTable("TaskAssignments");
                });

            modelBuilder.Entity("CPMP.Models.TaskComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("PK__TaskComm__C3B4DFCA3F9D945B");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskComments");
                });

            modelBuilder.Entity("CPMP.Models.TaskStatus", b =>
                {
                    b.Property<int>("TaskStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskStatusId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaskStatusId")
                        .HasName("PK__TaskStat__C023DD6C3D38CA10");

                    b.HasIndex(new[] { "Name" }, "UQ__TaskStat__737584F6B3AB5656")
                        .IsUnique();

                    b.ToTable("TaskStatuses");
                });

            modelBuilder.Entity("CPMP.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("TeamId")
                        .HasName("PK__Teams__123AE7997C6A078A");

                    b.HasIndex("ProjectId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("CPMP.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("RoleInTeam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeamId", "UserId")
                        .HasName("PK__TeamMemb__C3426B5D5D61FA72");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("CPMP.Models.TimeLog", b =>
                {
                    b.Property<int>("TimeLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeLogId"));

                    b.Property<decimal?>("HoursWorked")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateOnly?>("LogDate")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TimeLogId")
                        .HasName("PK__TimeLogs__26E43757CEB1BF3B");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("CPMP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C4FC7636C");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4356C72CA")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534C7857216")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760AD7ABADBA2");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("CPMP.Models.File", b =>
                {
                    b.HasOne("CPMP.Models.Task", "Task")
                        .WithMany("Files")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__Files__TaskId__60A75C0F");

                    b.HasOne("CPMP.Models.User", "UploadedByNavigation")
                        .WithMany("Files")
                        .HasForeignKey("UploadedBy")
                        .HasConstraintName("FK__Files__UploadedB__619B8048");

                    b.Navigation("Task");

                    b.Navigation("UploadedByNavigation");
                });

            modelBuilder.Entity("CPMP.Models.Notification", b =>
                {
                    b.HasOne("CPMP.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__656C112C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CPMP.Models.Task", b =>
                {
                    b.HasOne("CPMP.Models.User", "CreatedByNavigation")
                        .WithMany("Tasks")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Tasks__CreatedBy__52593CB8");

                    b.HasOne("CPMP.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Tasks__ProjectId__5165187F");

                    b.HasOne("CPMP.Models.TaskStatus", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Tasks__StatusId__534D60F1");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Project");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("CPMP.Models.TaskAssignment", b =>
                {
                    b.HasOne("CPMP.Models.Task", "Task")
                        .WithMany("TaskAssignments")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK__TaskAssig__TaskI__571DF1D5");

                    b.HasOne("CPMP.Models.User", "User")
                        .WithMany("TaskAssignments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TaskAssig__UserI__5812160E");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CPMP.Models.TaskComment", b =>
                {
                    b.HasOne("CPMP.Models.Task", "Task")
                        .WithMany("TaskComments")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__TaskComme__TaskI__5BE2A6F2");

                    b.HasOne("CPMP.Models.User", "User")
                        .WithMany("TaskComments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TaskComme__UserI__5CD6CB2B");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CPMP.Models.Team", b =>
                {
                    b.HasOne("CPMP.Models.Project", "Project")
                        .WithMany("Teams")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Teams__ProjectId__46E78A0C");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CPMP.Models.TeamMember", b =>
                {
                    b.HasOne("CPMP.Models.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .IsRequired()
                        .HasConstraintName("FK__TeamMembe__TeamI__4AB81AF0");

                    b.HasOne("CPMP.Models.User", "User")
                        .WithMany("TeamMembers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TeamMembe__UserI__4BAC3F29");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CPMP.Models.TimeLog", b =>
                {
                    b.HasOne("CPMP.Models.Task", "Task")
                        .WithMany("TimeLogs")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__TimeLogs__TaskId__6A30C649");

                    b.HasOne("CPMP.Models.User", "User")
                        .WithMany("TimeLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TimeLogs__UserId__6B24EA82");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("CPMP.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__403A8C7D");

                    b.HasOne("CPMP.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__3F466844");
                });

            modelBuilder.Entity("CPMP.Models.Project", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("CPMP.Models.Task", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("TaskAssignments");

                    b.Navigation("TaskComments");

                    b.Navigation("TimeLogs");
                });

            modelBuilder.Entity("CPMP.Models.TaskStatus", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CPMP.Models.Team", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("CPMP.Models.User", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Notifications");

                    b.Navigation("TaskAssignments");

                    b.Navigation("TaskComments");

                    b.Navigation("Tasks");

                    b.Navigation("TeamMembers");

                    b.Navigation("TimeLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
